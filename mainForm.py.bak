#!/usr/bin/env python
# -*- coding: UTF8 -*-
#
# generated by wxGlade 0.6.8 on Sun Aug 03 17:32:34 2014
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MainForm(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainForm.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook_1 = wx.Notebook(self, wx.ID_ANY, style=wx.NB_BOTTOM)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.notebook_2 = wx.Notebook(self, wx.ID_ANY, style=wx.NB_BOTTOM)
        self.notebook_2_pane_1 = wx.Panel(self.notebook_2, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainForm.__set_properties
        self.SetTitle(_("frame_1"))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainForm.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(1, 2, 0, 0)
        self.notebook_1.AddPage(self.notebook_1_pane_1, _("tab1"))
        grid_sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
        self.notebook_2.AddPage(self.notebook_2_pane_1, _("tab1"))
        grid_sizer_1.Add(self.notebook_2, 1, wx.EXPAND, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class MainForm

class MainFormMenu(wx.MenuBar):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFormMenu.__init__
        wx.MenuBar.__init__(self, *args, **kwds)
        self.file = wx.Menu()
        self.open_vector = wx.MenuItem(self.file, ID_open_vector, _(u"\u77e2\u91cf\u6587\u4ef6"), "", wx.ITEM_NORMAL)
        self.file.AppendItem(self.open_vector)
        self.oprn_raster = wx.MenuItem(self.file, ID_open_raster, _(u"\u6805\u683c\u6587\u4ef6"), "", wx.ITEM_NORMAL)
        self.file.AppendItem(self.oprn_raster)
        self.open_static = wx.MenuItem(self.file, ID_open_static, _(u"\u7edf\u8ba1\u6587\u4ef6"), "", wx.ITEM_NORMAL)
        self.file.AppendItem(self.open_static)
        self.Append(self.file, _(u"\u6587\u4ef6"))
        self.DB = wx.Menu()
        self.link_DB = wx.MenuItem(self.DB, ID_link_DB, _(u"\u8fde\u63a5\u6570\u636e\u5e93"), "", wx.ITEM_NORMAL)
        self.DB.AppendItem(self.link_DB)
        self.save_DB = wx.MenuItem(self.DB, ID_save_DB, _(u"\u4fdd\u5b58\u5230\u6570\u636e\u5e93"), "", wx.ITEM_NORMAL)
        self.DB.AppendItem(self.save_DB)
        self.Append(self.DB, _(u"\u6570\u636e\u5e93"))
        self.module = wx.Menu()
        self.choose_module = wx.MenuItem(self.module, ID_choose_module, _(u"\u9009\u62e9\u6a21\u578b"), "", wx.ITEM_NORMAL)
        self.module.AppendItem(self.choose_module)
        self.set_module = wx.MenuItem(self.module, ID_set_module, _(u"\u81ea\u5b9a\u4e49\u6a21\u578b"), "", wx.ITEM_NORMAL)
        self.module.AppendItem(self.set_module)
        self.Append(self.module, _(u"\u6a21\u578b"))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFormMenu.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFormMenu.__do_layout
        pass
        # end wxGlade

# end of class MainFormMenu

class MainFormToolBar(wx.ToolBar):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFormToolBar.__init__
        wx.ToolBar.__init__(self, *args, **kwds)
        self.AddLabelTool(ID_TOOL_OPEN_VECTOR, _("openVector"), wx.Bitmap("E:\\evaluate_soft\\ICON\\folder_vector.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(ID_TOOL_OPEN_RASTER, _("openRaster"), wx.Bitmap("E:\\evaluate_soft\\ICON\\raster.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(ID_TOOL_OPEN_static, _("openStatic"), wx.Bitmap("E:\\evaluate_soft\\ICON\\static.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddSeparator()
        self.AddLabelTool(ID_TOOL_OPEN_DB, _("openDB"), wx.Bitmap("E:\\evaluate_soft\\ICON\\Database.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")
        self.AddLabelTool(ID_TOOL_CHOOSE_MODULE, _("openModule"), wx.Bitmap("E:\\evaluate_soft\\ICON\\choose_module.bmp", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "", "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.open_vector_event, id=ID_TOOL_OPEN_VECTOR)
        self.Bind(wx.EVT_TOOL, self.open_raster_event, id=ID_TOOL_OPEN_RASTER)
        self.Bind(wx.EVT_TOOL, self.open_static_event, id=ID_TOOL_OPEN_static)
        self.Bind(wx.EVT_TOOL, self.open_DB_event, id=ID_TOOL_OPEN_DB)
        self.Bind(wx.EVT_TOOL, self.open_module_event, id=ID_TOOL_CHOOSE_MODULE)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFormToolBar.__set_properties
        self.Realize()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFormToolBar.__do_layout
        pass
        # end wxGlade

    def open_vector_event(self, event):  # wxGlade: MainFormToolBar.<event_handler>
        print "Event handler 'open_vector_event' not implemented!"
        event.Skip()

    def open_raster_event(self, event):  # wxGlade: MainFormToolBar.<event_handler>
        print "Event handler 'open_raster_event' not implemented!"
        event.Skip()

    def open_static_event(self, event):  # wxGlade: MainFormToolBar.<event_handler>
        print "Event handler 'open_static_event' not implemented!"
        event.Skip()

    def open_DB_event(self, event):  # wxGlade: MainFormToolBar.<event_handler>
        print "Event handler 'open_DB_event' not implemented!"
        event.Skip()

    def open_module_event(self, event):  # wxGlade: MainFormToolBar.<event_handler>
        print "Event handler 'open_module_event' not implemented!"
        event.Skip()

# end of class MainFormToolBar
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MainForm(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()